name: Build Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (patch, minor, major)'
        required: true
        default: 'patch'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install build tools
      run: |
        npm install -g @vercel/ncc
        npm install -g pkg
      
    # Version bump with npm if triggered by workflow_dispatch
    - name: Bump version
      if: github.event_name == 'workflow_dispatch'
      id: bump_version
      run: |
        npm version ${{ github.event.inputs.release_type }} --no-git-tag-version
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $env:GITHUB_ENV
      shell: pwsh
      
    - name: Build executable
      run: npm run build
      
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v4
      with:
        name: csfloat-executable
        path: build/csfloat.exe
        
    - name: Upload README as artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: README.md
      
    # Create tag for the new version
    - name: Create Tag
      if: github.event_name == 'workflow_dispatch'
      id: create_tag
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git tag -a "v$env:NEW_VERSION" -m "Release v$env:NEW_VERSION"
        git push origin "v$env:NEW_VERSION"
      shell: pwsh
        
    # Create GitHub Release
    - name: Create Release
      if: github.event_name == 'workflow_dispatch'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }}
        draft: false
        prerelease: false
        
    # Upload executable to Release
    - name: Upload executable to Release
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/csfloat.exe
        asset_name: csfloat.exe
        asset_content_type: application/octet-stream
        
    # Upload README to Release
    - name: Upload README to Release
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./README.md
        asset_name: README.md
        asset_content_type: text/markdown